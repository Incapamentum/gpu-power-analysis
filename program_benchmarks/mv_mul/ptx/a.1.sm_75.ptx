







.version 7.6
.target sm_75
.address_size 64



.visible .entry _Z6mv_mulPiS_S_i(
.param .u64 _Z6mv_mulPiS_S_i_param_0,
.param .u64 _Z6mv_mulPiS_S_i_param_1,
.param .u64 _Z6mv_mulPiS_S_i_param_2,
.param .u32 _Z6mv_mulPiS_S_i_param_3
)
{
.reg .pred %p<8>;
.reg .b32 %r<53>;
.reg .b64 %rd<27>;


ld.param.u64 %rd15, [_Z6mv_mulPiS_S_i_param_0];
ld.param.u64 %rd16, [_Z6mv_mulPiS_S_i_param_1];
ld.param.u64 %rd14, [_Z6mv_mulPiS_S_i_param_2];
ld.param.u32 %r18, [_Z6mv_mulPiS_S_i_param_3];
cvta.to.global.u64 %rd1, %rd16;
cvta.to.global.u64 %rd2, %rd15;
mov.u32 %r20, %ctaid.x;
mov.u32 %r21, %ntid.x;
mov.u32 %r22, %tid.x;
mad.lo.s32 %r1, %r21, %r20, %r22;
setp.ge.s32 %p1, %r1, %r18;
setp.lt.s32 %p2, %r18, 1;
mov.u32 %r52, 0;
or.pred %p3, %p1, %p2;
@%p3 bra $L__BB0_7;

add.s32 %r26, %r18, -1;
and.b32 %r51, %r18, 3;
setp.lt.u32 %p4, %r26, 3;
mov.u32 %r52, 0;
mov.u32 %r49, %r52;
@%p4 bra $L__BB0_4;

sub.s32 %r46, %r18, %r51;
mad.lo.s32 %r29, %r18, %r1, 2;
mul.wide.s32 %rd17, %r29, 4;
add.s64 %rd24, %rd2, %rd17;
mov.u64 %rd23, %rd1;

$L__BB0_3:
ld.global.u32 %r30, [%rd23];
ld.global.u32 %r31, [%rd24+-8];
mad.lo.s32 %r32, %r30, %r31, %r52;
ld.global.u32 %r33, [%rd23+4];
ld.global.u32 %r34, [%rd24+-4];
mad.lo.s32 %r35, %r33, %r34, %r32;
ld.global.u32 %r36, [%rd23+8];
ld.global.u32 %r37, [%rd24];
mad.lo.s32 %r38, %r36, %r37, %r35;
ld.global.u32 %r39, [%rd23+12];
ld.global.u32 %r40, [%rd24+4];
mad.lo.s32 %r52, %r39, %r40, %r38;
add.s32 %r49, %r49, 4;
add.s64 %rd24, %rd24, 16;
add.s64 %rd23, %rd23, 16;
add.s32 %r46, %r46, -4;
setp.ne.s32 %p5, %r46, 0;
@%p5 bra $L__BB0_3;

$L__BB0_4:
setp.eq.s32 %p6, %r51, 0;
@%p6 bra $L__BB0_7;

mul.wide.s32 %rd18, %r49, 4;
add.s64 %rd26, %rd1, %rd18;
mad.lo.s32 %r41, %r18, %r1, %r49;
mul.wide.s32 %rd19, %r41, 4;
add.s64 %rd25, %rd2, %rd19;

$L__BB0_6:
.pragma "nounroll";
ld.global.u32 %r42, [%rd26];
ld.global.u32 %r43, [%rd25];
mad.lo.s32 %r52, %r42, %r43, %r52;
add.s64 %rd26, %rd26, 4;
add.s64 %rd25, %rd25, 4;
add.s32 %r51, %r51, -1;
setp.ne.s32 %p7, %r51, 0;
@%p7 bra $L__BB0_6;

$L__BB0_7:
cvta.to.global.u64 %rd20, %rd14;
mul.wide.s32 %rd21, %r1, 4;
add.s64 %rd22, %rd20, %rd21;
st.global.u32 [%rd22], %r52;
ret;

}

